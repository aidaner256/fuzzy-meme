services:
  wintercms:
    build:
      context: ./wintercms
      dockerfile: Dockerfile
    container_name: wintercms_app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wintercms.rule=Host(`localhost`)"
      - "traefik.http.services.wintercms.loadbalancer.server.port=8000"
    environment:
      - APP_ENV=docker
      - DB_CONNECTION=mysql
      - DB_HOST=127.0.0.1  
      - DB_PORT=3307  
      - DB_DATABASE=wintercms
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - PHP_MEMORY_LIMIT=-1
    depends_on:
      db:
        condition: service_healthy 
    mem_limit: 4g
    command: sh -c "php artisan migrate && php artisan serve --host=0.0.0.0 --port=8000"
    networks:
      - app-network
      - traefik

  db:
    image: mysql:8.0
    container_name: wintercms_db
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: wintercms
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "mysql", "--user=root", "--password=root", "--execute=SHOW DATABASES;"]
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      - app-network

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"  # Enable Traefik dashboard
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"  # HTTP traffic entry point
    ports:
      - "8000:8000"    # HTTP
      - "8080:8080"  # Traefik dashboard
    networks:
      - app-network
      - traefik

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
  traefik:
    external: true  # Make sure this network exists, otherwise, create it
