version: '2.2'

services:
  wintercms:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wintercms_app
    environment:
      - APP_ENV=docker
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=wintercms
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - PHP_MEMORY_LIMIT=-1
    depends_on:
      db:
        condition: service_healthy
    mem_limit: 4g
    command: sh -c "php artisan migrate && php artisan serve --host=0.0.0.0 --port=8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wintercms.rule=Host(`localhost`)"  # Используем localhost для теста
      - "traefik.http.services.wintercms.loadbalancer.server.port=8000"
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: wintercms_db
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: wintercms
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "mysql", "--user=root", "--password=root", "--execute=SHOW DATABASES;"]
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf  # Пример конфигурации Nginx
    ports:
      - "8081:80"  # Прокси через Nginx на порту 8081
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`localhost`)"  # Прокси через localhost
      - "traefik.http.services.nginx.loadbalancer.server.port=80"  # Порт на котором Nginx слушает
    networks:
      - app-network

  traefik:
    build:
      context: ./traefik  # Путь к каталогу с вашим Dockerfile для Traefik
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Панель управления Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
